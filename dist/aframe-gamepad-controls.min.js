!function(t){function e(a){if(i[a])return i[a].exports;var o=i[a]={exports:{},id:a,loaded:!1};return t[a].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){!function(t){return t?void(t.aframeCore||t).registerComponent("gamepad-controls",i(1)):void console.error("Component attempted to register before AFRAME was available.")}(window.AFRAME)},function(t,e){var i=.2,a=Math.PI/2,o=.2;t.exports={dependencies:["proxy-controls"],schema:{controller:{"default":0,oneOf:[0,1,2,3]},enabled:{"default":!0},movementEnabled:{"default":!0},lookEnabled:{"default":!0},flyEnabled:{"default":!1},easing:{"default":20},acceleration:{"default":65},sensitivity:{"default":.04},pitchAxis:{"default":"x",oneOf:["x","y","z"]},yawAxis:{"default":"y",oneOf:["x","y","z"]},rollAxis:{"default":"z",oneOf:["x","y","z"]},debug:{"default":!1}},init:function(){var t=this.el.sceneEl;this.prevTime=Date.now(),this.velocity=new THREE.Vector3(0,0,0),this.direction=new THREE.Vector3(0,0,0),this.rotation=new THREE.Euler(0,0,0,"YXZ"),this.pitch=new THREE.Object3D,this.yaw=new THREE.Object3D,this.yaw.position.y=10,this.yaw.add(this.pitch),t.addBehavior(this)},update:function(t){this.updatePosition(!!t),this.updateRotation()},remove:function(){},updatePosition:function(t){var e=this.data,a=e.acceleration,n=e.easing,r=this.velocity,s=window.performance.now(),d=(s-this.prevTime)/1e3,c=e.rollAxis,h=e.pitchAxis,l=this.el,u=this.getGamepad();if(this.prevTime=s,t||d>i)return r[c]=0,void(r[h]=0);r[c]-=r[c]*n*d,r[h]-=r[h]*n*d;var p=l.getComputedAttribute("position");e.enabled&&e.movementEnabled&&u&&(Math.abs(this.getJoystick(0).x)>o&&(r[h]+=this.getJoystick(0).x*a*d),Math.abs(this.getJoystick(0).y)>o&&(r[c]+=this.getJoystick(0).y*a*d));var y=this.getMovementVector(d);l.object3D.translateX(y.x),l.object3D.translateY(y.y),l.object3D.translateZ(y.z),l.setAttribute("position",{x:p.x+y.x,y:p.y+y.y,z:p.z+y.z})},getMovementVector:function(t){var e=this.el.getAttribute("rotation");return this.direction.copy(this.velocity),this.direction.multiplyScalar(t),e?(this.data.flyEnabled||(e.x=0),this.rotation.set(THREE.Math.degToRad(e.x),THREE.Math.degToRad(e.y),0),this.direction.applyEuler(this.rotation),this.direction):this.direction},updateRotation:function(){if(this.data.lookEnabled){var t=this.getJoystick(1);Math.abs(t.x)<=o&&(t.x=0),Math.abs(t.y)<=o&&(t.y=0),t.multiplyScalar(this.data.sensitivity),this.yaw.rotation.y-=t.x,this.pitch.rotation.x-=t.y,this.pitch.rotation.x=Math.max(-a,Math.min(a,this.pitch.rotation.x)),this.el.setAttribute("rotation",{x:THREE.Math.radToDeg(this.pitch.rotation.x),y:THREE.Math.radToDeg(this.yaw.rotation.y),z:0})}},getGamepad:function(){return navigator.getGamepads()[this.data.controller]},getButton:function(t){return this.getGamepad().buttons[t]},getAxis:function(t){return this.getGamepad().axes[t]},getJoystick:function(t){var e=this.getGamepad();switch(t){case 0:return new THREE.Vector2(e.axes[0],e.axes[1]);case 1:return new THREE.Vector2(e.axes[2],e.axes[3]);default:throw new Error('Unexpected joystick index "%d".',t)}},isConnected:function(){return this.getGamepad().connected},getId:function(){return this.getGamepad().id}}}]);